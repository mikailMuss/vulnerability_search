import nmap
import time
import threading
import psycopg2
from psycopg2 import sql
from datetime import datetime

DB_HOST = "192.168.13.21"
DB_NAME = "vulnerabilities_data"
DB_USER = "ali_ibrahimli"
DB_PASSWORD = "mj5bnuwvAPA4"


def connect_db():
    return psycopg2.connect(
        host=DB_HOST,
        dbname=DB_NAME,
        user=DB_USER,
        password=DB_PASSWORD
    )


def show_progress():
    chars = "/â€”\\|"
    while True:
        for char in chars:
            print(f"\rScanning... {char}", end="")
            time.sleep(0.2)


def insert_or_update_scan_result(cursor, ip_address, port, state, os, product, version, extra_info, scrap_date):
    cursor.execute(
        """
        SELECT 1 FROM nmap_scan_result 
        WHERE ip_address = %s AND port = %s AND state = %s AND product = %s AND version = %s
        """, (str(ip_address), str(port), str(state), str(product), str(version))
    )

    if cursor.fetchone() is None:
        cursor.execute(
            """
            INSERT INTO nmap_scan_result (ip_address, port, state, os, product, version, extra, scrap_date) 
            VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
            """,
            (str(ip_address), str(port), str(state), str(os), str(product), str(version), str(extra_info), scrap_date)
        )


def scan_target(target):
    nm = nmap.PortScanner()

    print(f"Initializing scan for {target}")
    print(f"Scanning {target} for all open ports, service versions, and OS info...\n")

    progress_thread = threading.Thread(target=show_progress)
    progress_thread.daemon = True
    progress_thread.start()

    try:
        print("Starting full port scan...")
        nm.scan(target, '1-1000', arguments='-Pn -sS -A --reason --host-timeout 15m')
    except Exception as e:
        print(f"Error during scan: {e}")
        return

    print("\nScan complete.\n")

    if not nm.all_hosts():
        print("No hosts found.")
        return

    conn = connect_db()
    cursor = conn.cursor()

    scrap_date = datetime.now()

    for host in nm.all_hosts():
        ip_address = host
        print(f"\nHost: {ip_address}")

        if 'tcp' in nm[host]:
            for port in nm[host]['tcp']:
                service_info = nm[host]['tcp'][port]
                state = service_info['state']
                product = service_info.get('product', '')
                version = service_info.get('version', '')
                extra_info = service_info.get('extrainfo', '')
                os = service_info.get('cpe', '')

                print(f"Port: {port}, State: {state}, Product: {product}, Version: {version}, Extra Info: {extra_info}")

                insert_or_update_scan_result(
                    cursor, ip_address, port, state, os, product, version, extra_info, scrap_date
                )

        detected_os = ""
        if 'osmatch' in nm[host]:
            os_matches = [osmatch['name'] for osmatch in nm[host]['osmatch']]
            detected_os = ', '.join(os_matches)
            print(f"\nOS Matches: {detected_os}")

        if detected_os:
            cursor.execute(
                """
                UPDATE nmap_scan_result SET os = %s WHERE ip_address = %s
                """, (detected_os, str(ip_address))
            )

    conn.commit()
    cursor.close()
    conn.close()


if __name__ == "__main__":
    target = input("Enter the IP address or domain to scan: ")
    scan_target(target)